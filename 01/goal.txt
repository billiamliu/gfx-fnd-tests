Write a black line on a white field.

Your program should take 4 arguments, like this:
PROGNAME 8x7 1,2 3,4 OUTFILENAME

That should generate a P1-type PNM, and save it to OUTFILENAME.  That file should contain an image
with width 8 and height 7, with a line running from 1,2 (near the top-left corner) to 6,5 (near the
bottom-right).  Note that, as with much computer graphics, I assume that 0,0 is the top-left pixel.
To be clear, in high-school math terms, that line should have a "rise" of -3, and a "run" of 5, and
thus a "slope" of -0.6.

All output files should be in P1 format, with the line in black (1) and the other pixels in white (0).

The line should be of thickness 1, and should not be anti-aliased or any other fancy-schmancy nonsense.
Though if you can anti-alias it nicely, that'd be cool too.  But it won't help you pass the autotests.

Also for clarity, note that the line from 1,1 to 1,3 actually covers up 3 pixels, because both
endpoints are filled in.

Some possible instructions might be ambiguous about how to decide on a 1-pixel-width line.  So here
is an arbitrary rule to pick one of the two choices, so that your code and the autotests can agree:
If two pixels are equally correct, choose the pixel that is closer to the top-left.
